# This is the corrected, modern Podfile.
# It automatically finds your Flutter SDK and preserves your iOS 15.0 target.

# Sets the minimum iOS version for your entire app and its pods.
platform :ios, '15.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

# This function dynamically finds the path to your Flutter SDK.
# This replaces your old hardcoded path and is the main fix.
def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get has been run first."
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Flutter/Generated.xcconfig and running flutter pub get."
end

require File.join(flutter_root, 'packages', 'flutter_tools', 'bin', 'podhelper')

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))

  # --- IMPORTANT ---
  # If you have pods for Firebase, Maps, or other packages, add them here.
  # For example:
  # pod 'Firebase/Analytics'
  # pod 'Firebase/Crashlytics'

end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    target.build_configurations.each do |config|
      # This line ensures all pod targets also use your specified iOS version.
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '15.0'
    end
  end
end